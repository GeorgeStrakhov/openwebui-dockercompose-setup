services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme.json:/acme.json
      - ./traefik/traefik.yml:/traefik.yml
    networks:
      - web
    restart: unless-stopped
    # Add these labels for security and container identification
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"

  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: chromadb
    volumes:
      - chroma-data:/chroma/chroma/
    networks:
      - web
    environment:
      - IS_PERSISTENT=TRUE
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
    networks:
      - web
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY}
      - CHROMA_HTTP_HOST=chromadb
      - CHROMA_HTTP_PORT=8000
    labels:
      - "traefik.enable=true"
      # Add http router for port 80
      - "traefik.http.routers.webui-http.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.webui-http.entrypoints=web"
      # Secure router for HTTPS
      - "traefik.http.routers.webui.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.webui.entrypoints=websecure"
      - "traefik.http.routers.webui.tls=true"
      - "traefik.http.routers.webui.tls.certresolver=lets-encrypt"
      # Service configuration
      - "traefik.http.services.webui.loadbalancer.server.port=8080"
    restart: unless-stopped

networks:
  web:
    external: true

volumes:
  open-webui: {}
  chroma-data: {}
